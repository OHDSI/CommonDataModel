/*********************************************************************************
# Copyright 2017-11 Observational Health Data Sciences and Informatics
#
#
# Licensed under the Apache License, Version 2.0 (the "License")
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
********************************************************************************/

/************************

 ####### #     # ####### ######      #####  ######  #     #           #######      #####
 #     # ##   ## #     # #     #    #     # #     # ##   ##    #    # #           #     #
 #     # # # # # #     # #     #    #       #     # # # # #    #    # #                 #
 #     # #  #  # #     # ######     #       #     # #  #  #    #    # ######       #####
 #     # #     # #     # #          #       #     # #     #    #    #       # ###       #
 #     # #     # #     # #          #     # #     # #     #     #  #  #     # ### #     #
 ####### #     # ####### #           #####  ######  #     #      ##    #####  ###  #####


Spark script to create OMOP common data model version 5.3

last revised: 30-August-2021

Authors:  Authors:  Patrick Ryan, Christian Reich, Clair Blacketer


*************************/


/************************

Standardized vocabulary

************************/

CREATE TABLE concept (
concept_id 			INT 				NOT NULL,
concept_name 		STRING 				NOT NULL,
domain_id			STRING 				NOT NULL,
vocabulary_id 		STRING 				NOT NULL,
concept_class_id 	STRING 				NOT NULL,
standard_concept  	STRING 				NOT NULL,
concept_code 	  	STRING 				NOT NULL,
valid_start_date   	DATE 				NOT NULL,
valid_end_date      DATE 				NOT NULL,
invalid_reason      STRING
) USING DELTA;




CREATE TABLE vocabulary (
  vocabulary_id			    STRING		NOT NULL,
  vocabulary_name		    STRING		NOT NULL,
  vocabulary_reference		STRING		NOT NULL,
  vocabulary_version	    STRING		NOT NULL,
  vocabulary_concept_id		INT			NOT NULL
)USING DELTA;




CREATE TABLE domain (
  domain_id			    STRING			NOT NULL,
  domain_name		    STRING   		NOT NULL,
  domain_concept_id	    INT    			NOT NULL
)USING DELTA;




CREATE TABLE concept_class (
  concept_class_id			    STRING		NOT NULL,
  concept_class_name		    STRING		NOT NULL,
  concept_class_concept_id	    INT			NOT NULL
)USING DELTA;




CREATE TABLE concept_relationship (
  concept_id_1			INT					NOT NULL,
  concept_id_2			INT					NOT NULL,
  relationship_id		STRING 				NOT NULL,
  valid_start_date	    DATE	    		NOT NULL,
  valid_end_date		DATE				NOT NULL,
  invalid_reason		STRING	
  )USING DELTA;
  
  



CREATE TABLE relationship (
  relationship_id			  STRING		NOT NULL,
  relationship_name			  STRING	    NOT NULL,
  is_hierarchical			  STRING		NOT NULL,
  defines_ancestry			  STRING		NOT NULL,
  reverse_relationship_id	  STRING		NOT NULL,
  relationship_concept_id	  INT			NOT NULL
)USING DELTA;





CREATE TABLE concept_synonym (
  concept_id			      STRING 		 NOT NULL,
  concept_synonym_name	      STRING		 NOT NULL,
  language_concept_id	      INT   		 NOT NULL
)USING DELTA;




CREATE TABLE concept_ancestor (
  ancestor_concept_id		    INT			NOT NULL,
  descendant_concept_id		    INT			NOT NULL,
  min_levels_of_separation		INT			NOT NULL,
  max_levels_of_separation		INT			NOT NULL
)USING DELTA;




CREATE TABLE source_to_concept_map (
  source_code				   STRING		NOT NULL,
  source_concept_id			   STRING		NOT NULL,
  source_vocabulary_id		   STRING		NOT NULL,
  source_code_description	   STRING,
  target_concept_id			   INT	   		NOT NULL,
  target_vocabulary_id		   STRING		NOT NULL,
  valid_start_date			   DATE			NOT NULL,
  valid_end_date			   DATE			NOT NULL,
  invalid_reason			   STRING	
)USING DELTA;





CREATE TABLE drug_strength (
  drug_concept_id				  INT		  NOT NULL,
  ingredient_concept_id			  INT		  NOT NULL,
  amount_value					  DOUBLE,
  amount_unit_concept_id		  INT,
  numerator_value				  DOUBLE,
  numerator_unit_concept_id		  INT	,
  denominator_value				  DOUBLE,
  denominator_unit_concept_id	  INT,
  box_size						  INT,
  valid_start_date				  DATE		  NOT NULL,
  valid_end_date				  DATE		  NOT NULL,
  invalid_reason				  STRING 
)USING DELTA;





CREATE TABLE cohort_definition (
  cohort_definition_id			    INT			  NOT NULL,
  cohort_definition_name			STRING		  NOT NULL,
  cohort_definition_description		STRING,
  definition_type_concept_id		INT			  NOT NULL,
  cohort_definition_syntax			STRING,
  subject_concept_id				INT			  NOT NULL,
  cohort_initiation_date			DATE
)USING DELTA;




CREATE TABLE attribute_definition (
  attribute_definition_id		    INT			  NOT NULL,
  attribute_name				    STRING	 	  NOT NULL,
  attribute_description			    STRING,
  attribute_type_concept_id			INT			  NOT NULL,
  attribute_syntax				    STRING
)USING DELTA;


/**************************

Standardized meta-data

***************************/


CREATE TABLE cdm_source
(
  cdm_source_name					STRING			NOT NULL ,
  cdm_source_abbreviation			STRING,
  cdm_holder						STRING,
  source_description				STRING,
  source_documentation_reference	STRING,
  cdm_etl_reference					STRING,
  source_release_date				DATE,
  cdm_release_date					DATE,
  cdm_version						STRING,
  vocabulary_version				STRING	
)USING DELTA;




CREATE TABLE metadata
(
  metadata_concept_id      			 INT    		NOT NULL ,
  metadata_type_concept_id 			 INT    		NOT NULL ,
  name                     			 STRING 		NOT NULL ,
  value_as_string          			 STRING,
  value_as_concept_id       		 INT  ,
  metadata_date            			 DATE     ,
  metadata_datetime        			 TIMESTAMP
)USING DELTA;




/************************

Standardized clinical data

************************/

--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE person
(
  person_id						       INT	  		NOT NULL ,
  gender_concept_id				       INT	  		NOT NULL ,
  year_of_birth					       INT	  		NOT NULL ,
  month_of_birth				       INT,
  day_of_birth					       INT,
  birth_datetime				       TIMESTAMP,
  race_concept_id				       INT	   		NOT NULL,
  ethnicity_concept_id			  	   INT	  		NOT NULL,
  location_id					       INT,
  provider_id					       INT,
  care_site_id					       INT,
  person_source_value			       STRING,
  gender_source_value			       STRING,
  gender_source_concept_id	           INT,
  race_source_value				       STRING,
  race_source_concept_id		       INT,
  ethnicity_source_value		       STRING,
  ethnicity_source_concept_id		   INT
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE observation_period
(
  observation_period_id				   INT			NOT NULL ,
  person_id							   INT			NOT NULL ,
  observation_period_start_date		   DATE			NOT NULL ,
  observation_period_end_date		   DATE			NOT NULL ,
  period_type_concept_id			   INT			NOT NULL
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE specimen
(
  specimen_id						   INT			NOT NULL ,
  person_id							   INT			NOT NULL ,
  specimen_concept_id				   INT			NOT NULL ,
  specimen_type_concept_id		       INT			NOT NULL ,
  specimen_date						   DATE			NOT NULL ,
  specimen_datetime					   TIMESTAMP,
  quantity							   DOUBLE,
  unit_concept_id					   INT,
  anatomic_site_concept_id			   INT ,
  disease_status_concept_id		       INT ,
  specimen_source_id				   STRING,
  specimen_source_value				   STRING,
  unit_source_value					   STRING,
  anatomic_site_source_value	       STRING,
  disease_status_source_value          STRING
)USING DELTA;





--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE death
(
  person_id							   INT			NOT NULL ,
  death_date						   DATE			NOT NULL ,
  death_datetime					   TIMESTAMP,
  death_type_concept_id   			   INT			NOT NULL ,
  cause_concept_id			           INT,
  cause_source_value			       STRING,
  cause_source_concept_id    		   INT
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE visit_occurrence
(
  visit_occurrence_id			       INT  		NOT NULL ,
  person_id						       INT			NOT NULL ,
  visit_concept_id				       INT			NOT NULL ,
  visit_start_date				       DATE			NOT NULL ,
  visit_start_datetime				   TIMESTAMP,
  visit_end_date					   DATE			NOT NULL ,
  visit_end_datetime				   TIMESTAMP,
  visit_type_concept_id			       INT			NOT NULL ,
  provider_id					       INT,
  care_site_id					       INT,
  visit_source_value				   STRING,
  visit_source_concept_id		       INT ,
  admitting_source_concept_id	       INT ,
  admitting_source_value		       STRING,
  discharge_to_concept_id		       INT   ,
  discharge_to_source_value		       STRING,
  preceding_visit_occurrence_id	       INT
)USING DELTA;





--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE visit_detail
(
  visit_detail_id                    INT			NOT NULL ,
  person_id                          INT			NOT NULL ,
  visit_detail_concept_id            INT			NOT NULL ,
  visit_detail_start_date            DATE    		NOT NULL ,
  visit_detail_start_datetime        TIMESTAMP,
  visit_detail_end_date              DATE    		NOT NULL ,
  visit_detail_end_datetime          TIMESTAMP,
  visit_detail_type_concept_id       INT			NOT NULL ,
  provider_id                        INT,
  care_site_id                       INT,
  admitting_source_concept_id        INT,
  discharge_to_concept_id            INT,
  preceding_visit_detail_id          INT,
  visit_detail_source_value          STRING,
  visit_detail_source_concept_id     INT,
  admitting_source_value             STRING,
  discharge_to_source_value          STRING,
  visit_detail_parent_id             INT,
  visit_occurrence_id                INT			NOT NULL
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE procedure_occurrence
(
  procedure_occurrence_id		 	 INT			NOT NULL ,
  person_id						     INT			NOT NULL ,
  procedure_concept_id			  	 INT			NOT NULL ,
  procedure_date				     DATE			NOT NULL ,
  procedure_datetime			     TIMESTAMP,
  procedure_type_concept_id		     INT			NOT NULL ,
  modifier_concept_id			     INT ,
  quantity						     INT ,
  provider_id					     INT ,
  visit_occurrence_id			     INT ,
  visit_detail_id             		 INT,
  procedure_source_value		     STRING,
  procedure_source_concept_id	     INT ,
  modifier_source_value		         STRING
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE drug_exposure
(
  drug_exposure_id				      INT			  NOT NULL ,
  person_id						      INT			  NOT NULL ,
  drug_concept_id				      INT			  NOT NULL ,
  drug_exposure_start_date		      DATE  		  NOT NULL ,
  drug_exposure_start_datetime  	  TIMESTAMP ,
  drug_exposure_end_date		      DATE			  NOT NULL ,
  drug_exposure_end_datetime	      TIMESTAMP ,
  verbatim_end_date				      DATE,
  drug_type_concept_id			      INT			  NOT NULL ,
  stop_reason					      STRING,
  refills						      INT,
  quantity						      DOUBLE,
  days_supply					      INT,
  sig							      STRING,
  route_concept_id				      INT,
  lot_number					      STRING,
  provider_id					      INT,
  visit_occurrence_id			      INT,
  visit_detail_id                     INT,
  drug_source_value				      STRING,
  drug_source_concept_id		      INT,
  route_source_value			      STRING,
  dose_unit_source_value		      STRING
)USING DELTA;





--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE device_exposure
(
  device_exposure_id			      	 INT		  NOT NULL ,
  person_id						     	 INT		  NOT NULL ,
  device_concept_id			         	 INT		  NOT NULL ,
  device_exposure_start_date	     	 DATE		  NOT NULL ,
  device_exposure_start_datetime  	  	 TIMESTAMP,
  device_exposure_end_date		    	 DATE,
  device_exposure_end_datetime    		 TIMESTAMP,
  device_type_concept_id		         INT		  NOT NULL ,
  unique_device_id			        	 STRING,
  quantity						         INT,
  provider_id					         INT,
  visit_occurrence_id			         INT,
  visit_detail_id                 		 INT,
  device_source_value			         STRING,
  device_source_concept_id		    	 INT	
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE condition_occurrence
(
  condition_occurrence_id		  		  INT			NOT NULL ,
  person_id						          INT			NOT NULL ,
  condition_concept_id			  		  INT			NOT NULL ,
  condition_start_date			    	  DATE			NOT NULL ,
  condition_start_datetime		  		  TIMESTAMP,
  condition_end_date			   		  DATE,
  condition_end_datetime		   		  TIMESTAMP,
  condition_type_concept_id		  		  INT			NOT NULL ,
  stop_reason					          STRING,
  provider_id					          INT,
  visit_occurrence_id			          INT,
  visit_detail_id               		  INT,
  condition_source_value		    	  STRING,
  condition_source_concept_id	  		  INT,
  condition_status_source_value			  STRING,
  condition_status_concept_id	  		  INT
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE measurement
(
  measurement_id				      	  INT			NOT NULL ,
  person_id						          INT			NOT NULL ,
  measurement_concept_id		    	  INT			NOT NULL ,
  measurement_date				     	  DATE			NOT NULL ,
  measurement_datetime			    	  TIMESTAMP,
  measurement_time              		  STRING,
  measurement_type_concept_id	 		  INT			NOT NULL ,
  operator_concept_id			     	  INT,
  value_as_number				      	  DOUBLE ,
  value_as_concept_id			     	  INT ,
  unit_concept_id				     	  INT ,
  range_low					          	  DOUBLE ,
  range_high					       	  DOUBLE ,
  provider_id					       	  INT ,
  visit_occurrence_id			      	  INT ,
  visit_detail_id              			  INT,
  measurement_source_value				  STRING,
  measurement_source_concept_id			  INT ,
  unit_source_value				   		  STRING,
  value_source_value			     	  STRING
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE note
(
  note_id						    	  INT			  NOT NULL ,
  person_id						  		  INT			  NOT NULL ,
  note_date							  	  DATE			  NOT NULL ,
  note_datetime							  TIMESTAMP ,
  note_type_concept_id					  INT			  NOT NULL ,
  note_class_concept_id 				  INT			  NOT NULL ,
  note_title					 		  STRING,
  note_text						          STRING,
  encoding_concept_id					  INT			  NOT NULL ,
  language_concept_id					  INT			  NOT NULL ,
  provider_id					  		  INT,
  visit_occurrence_id					  INT,
  visit_detail_id       				  INT,
  note_source_value						  STRING	
)USING DELTA;





CREATE TABLE note_nlp
(
  note_nlp_id					         INT			  NOT NULL ,
  note_id						         INT			  NOT NULL ,
  section_concept_id			         INT,
  snippet						         STRING,
  offset					             STRING,
  lexical_variant				         STRING			  NOT NULL ,
  note_nlp_concept_id			    	 INT,
  note_nlp_source_concept_id  			 INT,
  nlp_system					         STRING,
  nlp_date						         DATE			  NOT NULL ,
  nlp_datetime					         TIMESTAMP,
  term_exists					         STRING,
  term_temporal					         STRING,
  term_modifiers				      	 STRING
)USING DELTA;





--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE observation
(
  observation_id					     INT			NOT NULL ,
  person_id						         INT			NOT NULL ,
  observation_concept_id			 	 INT			NOT NULL ,
  observation_date				      	 DATE			NOT NULL ,
  observation_datetime				  	 TIMESTAMP,
  observation_type_concept_id	  		 INT			NOT NULL ,
  value_as_number				         DOUBLE	 ,
  value_as_string				         STRING,
  value_as_concept_id			         INT ,
  qualifier_concept_id			         INT ,
  unit_concept_id				         INT ,
  provider_id					         INT ,
  visit_occurrence_id			         INT ,
  visit_detail_id                        INT,
  observation_source_value		  		 STRING,
  observation_source_concept_id			 INT ,
  unit_source_value				      	 STRING,
  qualifier_source_value			     STRING
)USING DELTA;





CREATE TABLE fact_relationship
(
  domain_concept_id_1					INT			NOT NULL ,
  fact_id_1						    	INT			NOT NULL ,
  domain_concept_id_2					INT			NOT NULL ,
  fact_id_2						    	INT			NOT NULL ,
  relationship_concept_id				INT			NOT NULL
)USING DELTA;





/************************

Standardized health system data

************************/



CREATE TABLE location
(
  location_id					 	 INT			  NOT NULL ,
  address_1						  	 STRING,
  address_2						  	 STRING,
  city							     STRING,
  state							     STRING,
  zip							     STRING,
  county							 STRING,
  location_source_value STRING	
)USING DELTA;




CREATE TABLE care_site
(
  care_site_id						 INT			  NOT NULL ,
  care_site_name					 STRING,
  place_of_service_concept_id	  	 INT,
  location_id					     INT,
  care_site_source_value			 STRING,
  place_of_service_source_value      STRING	
)USING DELTA;




CREATE TABLE provider
(
  provider_id					     INT			  NOT NULL ,
  provider_name					     STRING,
  NPI							     STRING	,
  DEA							     STRING	,
  specialty_concept_id			  	 INT,
  care_site_id					     INT,
  year_of_birth					     INT,
  gender_concept_id				     INT,
  provider_source_value			  	 STRING,
  specialty_source_value			 STRING,
  specialty_source_concept_id	     INT,
  gender_source_value			     STRING,
  gender_source_concept_id		     INT	
)USING DELTA;




/************************

Standardized health economics

************************/



--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE payer_plan_period
(
  payer_plan_period_id			    	INT			  NOT NULL ,
  person_id						    	INT			  NOT NULL ,
  payer_plan_period_start_date      	DATE  	      NOT NULL ,
  payer_plan_period_end_date			DATE	      NOT NULL ,
  payer_concept_id                  	INT,
  payer_source_value			    	STRING,
  payer_source_concept_id       		INT,
  plan_concept_id               		INT,
  plan_source_value				 	    STRING,
  plan_source_concept_id        		INT,
  sponsor_concept_id            		INT,
  sponsor_source_value          		STRING,
  sponsor_source_concept_id     		INT,
  family_source_value			  	    STRING,
  stop_reason_concept_id        		INT,
  stop_reason_source_value      		STRING,
  stop_reason_source_concept_id 		INT 
)USING DELTA;




CREATE TABLE cost
(
  cost_id					          	INT	   		  NOT NULL ,
  cost_event_id             			INT		      NOT NULL ,
  cost_domain_id            			STRING		  NOT NULL ,
  cost_type_concept_id      			INT			  NOT NULL ,
  currency_concept_id			  		INT,
  total_charge						  	DOUBLE,
  total_cost						    DOUBLE,
  total_paid						    DOUBLE,
  paid_by_payer					    	DOUBLE,
  paid_by_patient						DOUBLE,
  paid_patient_copay					DOUBLE,
  paid_patient_coinsurance  			DOUBLE,
  paid_patient_deductible				DOUBLE,
  paid_by_primary						DOUBLE,
  paid_ingredient_cost					DOUBLE,
  paid_dispensing_fee					DOUBLE,
  payer_plan_period_id					INT,
  amount_allowed		       			DOUBLE,
  revenue_code_concept_id				INT,
  reveue_code_source_value  			STRING,
  drg_concept_id			      		INT,
  drg_source_value			    		STRING	
)USING DELTA;




/************************

Standardized derived elements

************************/



--HINT DISTRIBUTE_ON_KEY(subject_id)
CREATE TABLE cohort
(
  cohort_definition_id					INT			NOT NULL ,
  subject_id							INT			NOT NULL ,
  cohort_start_date						DATE		NOT NULL ,
  cohort_end_date						DATE		NOT NULL
)USING DELTA;





--HINT DISTRIBUTE_ON_KEY(subject_id)
CREATE TABLE cohort_attribute
(
  cohort_definition_id					INT			NOT NULL ,
  subject_id							INT			NOT NULL ,
  cohort_start_date						DATE		NOT NULL ,
  cohort_end_date						DATE		NOT NULL ,
  attribute_definition_id 				INT			NOT NULL ,
  value_as_number						DOUBLE,
  value_as_concept_id					INT		
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE drug_era
(
  drug_era_id							INT			NOT NULL ,
  person_id								INT			NOT NULL ,
  drug_concept_id						INT			NOT NULL ,
  drug_era_start_date					DATE	    NOT NULL ,
  drug_era_end_date						DATE		NOT NULL ,
  drug_exposure_count					INT,
  gap_days								INT		
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE dose_era
(
  dose_era_id					 	    INT			NOT NULL ,
  person_id						 	    INT			NOT NULL ,
  drug_concept_id						INT			NOT NULL ,
  unit_concept_id						INT			NOT NULL ,
  dose_value							DOUBLE		NOT NULL ,
  dose_era_start_date					DATE		NOT NULL ,
  dose_era_end_date	    				DATE		NOT NULL
)USING DELTA;




--HINT DISTRIBUTE_ON_KEY(person_id)
CREATE TABLE condition_era
(
  condition_era_id				    	INT			NOT NULL ,
  person_id						        INT			NOT NULL ,
  condition_concept_id			 		INT			NOT NULL ,
  condition_era_start_date				DATE        NOT NULL ,
  condition_era_end_date				DATE		NOT NULL ,
  condition_occurrence_count			INT		
)USING DELTA;